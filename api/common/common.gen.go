// Package common provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package common

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for Status.
const (
	Healthy       Status = "healthy"
	Syncing       Status = "syncing"
	Unhealthy     Status = "unhealthy"
	Uninitialized Status = "uninitialized"
	Unregistered  Status = "unregistered"
)

// Node defines model for Node.
type Node struct {
	// Address Network address of the node
	Address string `json:"address"`

	// Id Unique identifier for the node
	Id openapi_types.UUID `json:"id"`

	// IsMaster Whether this node is the master for its replica
	IsMaster *bool `json:"isMaster,omitempty"`

	// PartitionID ID of the partition this node belongs to (if any)
	PartitionID *string `json:"partitionID,omitempty"`

	// ReplicaID ID of the replica this node belongs to (if any)
	ReplicaID *openapi_types.UUID `json:"replicaID,omitempty"`

	// Status Current status of a node or replica
	Status Status `json:"status"`
}

// Partition defines model for Partition.
type Partition struct {
	// Id Unique identifier for the partition
	Id string `json:"id"`

	// MasterReplicaId ID of the replica that is currently the master for this partition
	MasterReplicaId openapi_types.UUID `json:"masterReplicaId"`

	// Replicas List of replicas for this partition
	Replicas []Node `json:"replicas"`
}

// Replica defines model for Replica.
type Replica struct {
	// Address Network address of the replica
	Address string `json:"address"`

	// Id Unique identifier for the node
	Id openapi_types.UUID `json:"id"`

	// Status Current status of a node or replica
	Status Status `json:"status"`
}

// State defines model for State.
type State struct {
	// Nodes Array of active nodes in the cluster
	Nodes []Node `json:"nodes"`

	// Partitions Map of partitions in the distributed key-value store, keyed by partition ID
	Partitions map[string]Partition `json:"partitions"`

	// UnRegisteredNodes Array of nodes that have not been fully registered
	UnRegisteredNodes []Node `json:"unRegisteredNodes"`

	// VirtualNodes Array of virtual nodes used for consistent hashing
	VirtualNodes []VirtualNode `json:"virtualNodes"`
}

// Status Current status of a node or replica
type Status string

// VirtualNode defines model for VirtualNode.
type VirtualNode struct {
	// Hash Hash value used for consistent hashing
	Hash int64 `json:"hash"`

	// Id Unique identifier for the virtual node
	Id openapi_types.UUID `json:"id"`

	// PartitionId ID of the partition this virtual node maps to
	PartitionId string `json:"partitionId"`
}
