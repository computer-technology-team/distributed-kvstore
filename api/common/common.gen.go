// Package common provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package common

import (
	"github.com/oapi-codegen/nullable"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for OperationType.
const (
	Delete OperationType = "delete"
	Set    OperationType = "set"
)

// Defines values for Status.
const (
	Healthy       Status = "healthy"
	Unhealthy     Status = "unhealthy"
	Uninitialized Status = "uninitialized"
)

// DeleteResponse defines model for DeleteResponse.
type DeleteResponse struct {
	// Deleted Whether the key was successfully deleted
	Deleted bool `json:"deleted"`

	// Key The key that was requested for deletion
	Key string `json:"key"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	// Error Error code
	Error string `json:"error"`

	// Message Human-readable error message
	Message string `json:"message"`
}

// KeyValuePair defines model for KeyValuePair.
type KeyValuePair struct {
	// Key The key for the key-value pair
	Key string `json:"key"`

	// Value The value associated with the key
	Value string `json:"value"`
}

// KeyValueResponse defines model for KeyValueResponse.
type KeyValueResponse struct {
	// Found Whether the key was found
	Found bool `json:"found"`

	// Key The requested key
	Key string `json:"key"`

	// Value The value associated with the key (null if not found)
	Value nullable.Nullable[string] `json:"value"`
}

// Node defines model for Node.
type Node struct {
	// Address Network address of the node
	Address string `json:"address"`

	// Id Unique identifier for the node
	Id openapi_types.UUID `json:"id"`

	// Partitions Map of partition IDs to role information for this node
	Partitions map[string]PartitionRole `json:"partitions"`
}

// Operation defines model for Operation.
type Operation struct {
	// ID Serial(WAL Level) Unique operation ID
	ID int64 `json:"id"`

	// Key Key affected by the operation
	Key string `json:"key"`

	// Type Type of operation
	Type OperationType `json:"type"`

	// Value Value for set operations (optional for delete)
	Value nullable.Nullable[string] `json:"value"`
}

// OperationType Type of operation
type OperationType string

// Partition defines model for Partition.
type Partition struct {
	// Id Unique identifier for the partition
	Id string `json:"id"`

	// MasterNodeId ID of the node that is currently the master for this partition
	MasterNodeId openapi_types.UUID `json:"masterNodeId"`

	// NodeIds List of node IDs that host this partition
	NodeIds []openapi_types.UUID `json:"nodeIds"`

	// Status Health status of a partition
	Status Status `json:"status"`
}

// PartitionRole defines model for PartitionRole.
type PartitionRole struct {
	// IsMaster Whether this node should be the master for this partition
	IsMaster bool `json:"isMaster"`

	// IsSyncing Whether this partition is currently syncing data
	IsSyncing bool `json:"isSyncing"`

	// Status Health status of a partition
	Status Status `json:"status"`
}

// SetValueRequest defines model for SetValueRequest.
type SetValueRequest struct {
	// Value The value to associate with the key
	Value string `json:"value"`
}

// State defines model for State.
type State struct {
	// Nodes Array of active nodes in the cluster
	Nodes []Node `json:"nodes"`

	// Partitions Map of partitions in the distributed key-value store, keyed by partition ID
	Partitions map[string]Partition `json:"partitions"`

	// ReplicaCount number of replicas each partition should have
	ReplicaCount int `json:"replicaCount"`

	// UnRegisteredNodes Array of nodes that have not been fully registered
	UnRegisteredNodes []Node `json:"unRegisteredNodes"`

	// VirtualNodes Array of virtual nodes used for consistent hashing across all partitions
	VirtualNodes []VirtualNode `json:"virtualNodes"`
}

// Status Health status of a partition
type Status string

// VirtualNode defines model for VirtualNode.
type VirtualNode struct {
	// Hash Hash value used for consistent hashing
	Hash int64 `json:"hash"`

	// Id Unique identifier for the virtual node
	Id openapi_types.UUID `json:"id"`

	// PartitionId ID of the partition this virtual node belongs to
	PartitionId string `json:"partitionId"`
}
